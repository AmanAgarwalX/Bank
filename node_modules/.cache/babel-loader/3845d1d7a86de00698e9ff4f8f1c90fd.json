{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/aman/work/tcs/Bank/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport { Grid, TextField, FormControl, InputLabel, Select, MenuItem, Stepper, Step, StepLabel, Button } from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { withSnackbar } from \"notistack\";\nimport moment from \"moment\";\n\nconst exportToJson = objectData => {\n  let filename = \"export.json\";\n  let contentType = \"application/json;charset=utf-8;\";\n\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(objectData)))], {\n      type: contentType\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(objectData));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    height: 15,\n    width: 15\n  },\n  mainHeading: {\n    font: \"normal normal 500 25px/30px Poppins\",\n    letterSpacing: \"0.9px\",\n    color: \"#62657B\"\n  },\n  subHeading: {\n    font: \"normal normal 500 22px/25px Poppins\",\n    letterSpacing: \"0.72px\",\n    color: \"#707070\"\n  },\n  answer: {\n    font: \"normal normal normal 17px/22px Poppins\",\n    letterSpacing: \"0.66px\",\n    color: \"#707070\"\n  },\n  grid: {\n    borderBottom: \"1px solid rgb(0,0,0,.12)\",\n    paddingBottom: 20\n  },\n  mainGrid: {\n    minHeight: \"100vh\",\n    maxWidth: \"100vw\",\n    padding: 100,\n    backgroundColor: theme.palette.primary.main\n  }\n}));\nconst form = [{\n  first_name: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"First name\",\n    max_length: 30\n  },\n  last_name: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"Last name\",\n    max_length: 150\n  },\n  email: {\n    type: \"email\",\n    required: true,\n    read_only: false,\n    label: \"Email\"\n  },\n  address: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"Address\"\n  },\n  city: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"City\"\n  },\n  state: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"State\"\n  },\n  zip_code: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"Zip code\"\n  },\n  country: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"Country\"\n  }\n}, {\n  phone_number: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"Phone number\",\n    max_length: 128\n  },\n  type: {\n    type: \"choice\",\n    required: true,\n    read_only: false,\n    label: \"Account Type\",\n    choices: [{\n      value: \"Current\",\n      display_name: \"Current\"\n    }, {\n      value: \"Savings\",\n      display_name: \"Savings\"\n    }]\n  },\n  pan: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"Pan number\"\n  },\n  aadhar: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"Aadhar number\"\n  },\n  company: {\n    type: \"string\",\n    required: true,\n    read_only: false,\n    label: \"Current Company\"\n  },\n  dob: {\n    type: \"date\",\n    required: true,\n    read_only: false,\n    label: \"Date of Birth\"\n  }\n}];\nconst isMultiline = new Set([\"address\"]);\n\nconst QuestionAnswer = ({\n  question,\n  answer\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.subHeading,\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.answer,\n      children: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuestionAnswer, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = QuestionAnswer;\nconst steps = [\"Personal Details\", \"Account Details\"];\nexport default _c3 = withSnackbar(_c2 = _s2(props => {\n  _s2();\n\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const [step, setStep] = useState(0);\n\n  const getFormComponent = (key, field) => {\n    switch (field.type) {\n      case \"email\":\n      case \"string\":\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            type: field.type,\n            value: data[key] || \"\",\n            onChange: e => setData({ ...data,\n              [key]: e.target.value\n            }),\n            label: _.startCase(field.label || key),\n            variant: \"outlined\",\n            required: field.required,\n            fullWidth: true,\n            multiline: isMultiline.has(key) || false,\n            rows: isMultiline.has(key) ? 2 : 1,\n            id: key,\n            name: key,\n            autoComplete: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this);\n\n      case \"date\":\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            fullWidth: true,\n            value: data[key] || null,\n            onChange: e => setData({ ...data,\n              [key]: moment(e).format(\"YYYY-MM-DD\")\n            }),\n            label: _.startCase(field.label || key),\n            inputVariant: \"outlined\",\n            format: \"yyyy-MM-dd\",\n            margin: \"normal\",\n            id: key,\n            KeyboardButtonProps: {\n              \"aria-label\": \"change date\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this);\n\n      case \"choice\":\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            required: field.required,\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: _.startCase(field.label || key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              label: _.startCase(field.label || key),\n              value: data[key] || \"\",\n              onChange: e => setData({ ...data,\n                [key]: e.target.value\n              }),\n              children: field.choices.map(c => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: c.value,\n                children: c.display_name\n              }, c.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainGrid,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: step,\n        children: [steps.map(s => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [step < 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 2,\n            children: Object.keys(form[step]).map(key => getFormComponent(key, form[step][key]))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => setStep(step + 1),\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), step === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 2,\n            children: [0, 1].map(s => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  padding: 20\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    float: \"left\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: steps[s]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    float: \"right\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    color: \"primary\",\n                    onClick: () => setStep(s),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                justify: \"space-evenly\",\n                children: Object.keys(form[s]).map(key => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 5,\n                  className: classes.grid,\n                  children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(QuestionAnswer, {\n                    question: form[s][key].label,\n                    answer: data[key]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 27\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this)]\n            }, s, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => {\n                exportToJson(data);\n                props.enqueueSnackbar(\"Form Submitted Successfully\", {\n                  variant: \"success\"\n                });\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}, \"4iXoyuOH2ny5vMCnOP9kI+17U8Q=\", false, function () {\n  return [useStyles];\n}));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QuestionAnswer\");\n$RefreshReg$(_c2, \"%default%$withSnackbar\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/home/aman/work/tcs/Bank/src/App.js"],"names":["makeStyles","React","useState","Grid","TextField","FormControl","InputLabel","Select","MenuItem","Stepper","Step","StepLabel","Button","_","KeyboardDatePicker","withSnackbar","moment","exportToJson","objectData","filename","contentType","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","a","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","useStyles","theme","icon","height","width","mainHeading","font","letterSpacing","color","subHeading","answer","grid","borderBottom","paddingBottom","mainGrid","minHeight","maxWidth","padding","backgroundColor","palette","primary","main","form","first_name","required","read_only","label","max_length","last_name","email","address","city","state","zip_code","country","phone_number","choices","value","display_name","pan","aadhar","company","dob","isMultiline","Set","QuestionAnswer","question","classes","steps","props","data","setData","step","setStep","getFormComponent","key","field","e","startCase","has","format","map","c","s","Object","keys","textAlign","float","enqueueSnackbar","variant"],"mappings":"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","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { withSnackbar } from \"notistack\";\nimport moment from \"moment\";\n\nconst exportToJson = (objectData) => {\n  let filename = \"export.json\";\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob(\n      [decodeURIComponent(encodeURI(JSON.stringify(objectData)))],\n      { type: contentType }\n    );\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" +\n      contentType +\n      \",\" +\n      encodeURIComponent(JSON.stringify(objectData));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    height: 15,\n    width: 15,\n  },\n  mainHeading: {\n    font: \"normal normal 500 25px/30px Poppins\",\n    letterSpacing: \"0.9px\",\n    color: \"#62657B\",\n  },\n  subHeading: {\n    font: \"normal normal 500 22px/25px Poppins\",\n    letterSpacing: \"0.72px\",\n    color: \"#707070\",\n  },\n  answer: {\n    font: \"normal normal normal 17px/22px Poppins\",\n    letterSpacing: \"0.66px\",\n    color: \"#707070\",\n  },\n  grid: {\n    borderBottom: \"1px solid rgb(0,0,0,.12)\",\n    paddingBottom: 20,\n  },\n  mainGrid: {\n    minHeight: \"100vh\",\n    maxWidth: \"100vw\",\n    padding: 100,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nconst form = [\n  {\n    first_name: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"First name\",\n      max_length: 30,\n    },\n    last_name: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Last name\",\n      max_length: 150,\n    },\n    email: {\n      type: \"email\",\n      required: true,\n      read_only: false,\n      label: \"Email\",\n    },\n    address: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Address\",\n    },\n    city: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"City\",\n    },\n    state: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"State\",\n    },\n    zip_code: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Zip code\",\n    },\n    country: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Country\",\n    },\n  },\n  {\n    phone_number: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Phone number\",\n      max_length: 128,\n    },\n    type: {\n      type: \"choice\",\n      required: true,\n      read_only: false,\n      label: \"Account Type\",\n      choices: [\n        {\n          value: \"Current\",\n          display_name: \"Current\",\n        },\n        {\n          value: \"Savings\",\n          display_name: \"Savings\",\n        },\n      ],\n    },\n    pan: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Pan number\",\n    },\n    aadhar: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Aadhar number\",\n    },\n    company: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Current Company\",\n    },\n    dob: {\n      type: \"date\",\n      required: true,\n      read_only: false,\n      label: \"Date of Birth\",\n    },\n  },\n];\nconst isMultiline = new Set([\"address\"]);\n\nconst QuestionAnswer = ({ question, answer }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.subHeading}>{question}</div>\n      <br />\n      <div className={classes.answer}>{answer}</div>\n    </div>\n  );\n};\n\nconst steps = [\"Personal Details\", \"Account Details\"];\n\nexport default withSnackbar((props) => {\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const [step, setStep] = useState(0);\n\n  const getFormComponent = (key, field) => {\n    switch (field.type) {\n      case \"email\":\n      case \"string\":\n        return (\n          <Grid item xs={12} key={key}>\n            <TextField\n              type={field.type}\n              value={data[key] || \"\"}\n              onChange={(e) => setData({ ...data, [key]: e.target.value })}\n              label={_.startCase(field.label || key)}\n              variant=\"outlined\"\n              required={field.required}\n              fullWidth\n              multiline={isMultiline.has(key) || false}\n              rows={isMultiline.has(key) ? 2 : 1}\n              id={key}\n              name={key}\n              autoComplete={key}\n            />\n          </Grid>\n        );\n      case \"date\":\n        return (\n          <Grid item xs={12} key={key}>\n            <KeyboardDatePicker\n              disableToolbar\n              fullWidth\n              value={data[key] || null}\n              onChange={(e) =>\n                setData({ ...data, [key]: moment(e).format(\"YYYY-MM-DD\") })\n              }\n              label={_.startCase(field.label || key)}\n              inputVariant=\"outlined\"\n              format=\"yyyy-MM-dd\"\n              margin=\"normal\"\n              id={key}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n          </Grid>\n        );\n\n      case \"choice\":\n        return (\n          <Grid item xs={12} key={key}>\n            <FormControl variant=\"outlined\" required={field.required} fullWidth>\n              <InputLabel>{_.startCase(field.label || key)}</InputLabel>\n              <Select\n                label={_.startCase(field.label || key)}\n                value={data[key] || \"\"}\n                onChange={(e) => setData({ ...data, [key]: e.target.value })}\n              >\n                {field.choices.map((c) => (\n                  <MenuItem value={c.value} key={c.value}>\n                    {c.display_name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        );\n    }\n  };\n\n  return (\n    <div className={classes.mainGrid}>\n      <div style={{ backgroundColor: \"white\", padding: 20 }}>\n        <Stepper activeStep={step}>\n          {steps.map((s) => (\n            <Step key={s}>\n              <StepLabel>{s}</StepLabel>\n            </Step>\n          ))}\n          <Step>\n            <StepLabel>Summary</StepLabel>\n          </Step>\n        </Stepper>\n        <>\n          {step < 2 && (\n            <div style={{ padding: 20 }}>\n              <Grid container direction=\"column\" spacing={2}>\n                {Object.keys(form[step]).map((key) =>\n                  getFormComponent(key, form[step][key])\n                )}\n              </Grid>\n              <br />\n              <br />\n              <div style={{ textAlign: \"center\" }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => setStep(step + 1)}\n                >\n                  Next\n                </Button>\n              </div>\n            </div>\n          )}\n          {step === 2 && (\n            <>\n              <Grid container direction=\"column\" spacing={2}>\n                {[0, 1].map((s) => (\n                  <Grid item key={s}>\n                    <div style={{ padding: 20 }}>\n                      <div style={{ float: \"left\" }}>\n                        <h3>{steps[s]}</h3>\n                      </div>\n                      <div style={{ float: \"right\" }}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => setStep(s)}\n                        >\n                          Edit\n                        </Button>\n                      </div>\n                    </div>\n                    <br />\n                    <Grid container justify=\"space-evenly\">\n                      {Object.keys(form[s]).map((key) => (\n                        <Grid item xs={5} key={key} className={classes.grid}>\n                          <br />\n                          <QuestionAnswer\n                            question={form[s][key].label}\n                            answer={data[key]}\n                          />\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n              <br />\n              <br />\n              <div style={{ textAlign: \"center\" }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    exportToJson(data);\n                    props.enqueueSnackbar(\"Form Submitted Successfully\", {\n                      variant: \"success\",\n                    });\n                  }}\n                >\n                  Submit\n                </Button>\n              </div>\n            </>\n          )}\n        </>\n      </div>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}
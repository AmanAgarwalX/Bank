{"version":3,"sources":["App.js","reportWebVitals.js","utils/providers/theme.js","utils/providers/snack.js","utils/providers/index.js","index.js"],"names":["useStyles","makeStyles","theme","icon","height","width","mainHeading","font","letterSpacing","color","subHeading","answer","grid","borderBottom","paddingBottom","mainGrid","minHeight","maxWidth","padding","backgroundColor","palette","primary","main","form","first_name","type","required","read_only","label","max_length","last_name","email","address","city","state","zip_code","country","phone_number","choices","value","display_name","pan","aadhar","company","dob","isMultiline","Set","QuestionAnswer","question","classes","className","steps","withSnackbar","props","useState","data","setData","step","setStep","style","Stepper","activeStep","map","s","Step","StepLabel","Grid","container","direction","spacing","Object","keys","key","field","item","xs","TextField","onChange","e","target","_","startCase","variant","fullWidth","multiline","has","rows","id","name","autoComplete","disableToolbar","moment","format","inputVariant","margin","KeyboardButtonProps","FormControl","InputLabel","Select","c","MenuItem","getFormComponent","textAlign","Button","onClick","float","justify","objectData","filename","contentType","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","a","document","createElement","download","href","encodeURIComponent","body","appendChild","click","removeChild","exportToJson","enqueueSnackbar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isInWebAppiOS","standalone","isIos","userAgent","toLowerCase","test","themeLight","children","maxSnack","createMuiTheme","MuiButtonBase","disableRipple","secondary","shape","typography","fontFamily","join","CssBaseline","utils","DateFnsUtils","dense","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.6efda6a1.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\nimport React, { useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Stepper,\n  Step,\n  StepLabel,\n  Button,\n} from \"@material-ui/core\";\nimport _ from \"lodash\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { withSnackbar } from \"notistack\";\nimport moment from \"moment\";\n\nconst exportToJson = (objectData) => {\n  let filename = \"export.json\";\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob(\n      [decodeURIComponent(encodeURI(JSON.stringify(objectData)))],\n      { type: contentType }\n    );\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" +\n      contentType +\n      \",\" +\n      encodeURIComponent(JSON.stringify(objectData));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    height: 15,\n    width: 15,\n  },\n  mainHeading: {\n    font: \"normal normal 500 25px/30px Poppins\",\n    letterSpacing: \"0.9px\",\n    color: \"#62657B\",\n  },\n  subHeading: {\n    font: \"normal normal 500 22px/25px Poppins\",\n    letterSpacing: \"0.72px\",\n    color: \"#707070\",\n  },\n  answer: {\n    font: \"normal normal normal 17px/22px Poppins\",\n    letterSpacing: \"0.66px\",\n    color: \"#707070\",\n  },\n  grid: {\n    borderBottom: \"1px solid rgb(0,0,0,.12)\",\n    paddingBottom: 20,\n  },\n  mainGrid: {\n    minHeight: \"100vh\",\n    maxWidth: \"100vw\",\n    padding: 100,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nconst form = [\n  {\n    first_name: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"First name\",\n      max_length: 30,\n    },\n    last_name: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Last name\",\n      max_length: 150,\n    },\n    email: {\n      type: \"email\",\n      required: true,\n      read_only: false,\n      label: \"Email\",\n    },\n    address: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Address\",\n    },\n    city: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"City\",\n    },\n    state: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"State\",\n    },\n    zip_code: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Zip code\",\n    },\n    country: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Country\",\n    },\n  },\n  {\n    phone_number: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Phone number\",\n      max_length: 128,\n    },\n    type: {\n      type: \"choice\",\n      required: true,\n      read_only: false,\n      label: \"Account Type\",\n      choices: [\n        {\n          value: \"Current\",\n          display_name: \"Current\",\n        },\n        {\n          value: \"Savings\",\n          display_name: \"Savings\",\n        },\n      ],\n    },\n    pan: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Pan number\",\n    },\n    aadhar: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Aadhar number\",\n    },\n    company: {\n      type: \"string\",\n      required: true,\n      read_only: false,\n      label: \"Current Company\",\n    },\n    dob: {\n      type: \"date\",\n      required: true,\n      read_only: false,\n      label: \"Date of Birth\",\n    },\n  },\n];\nconst isMultiline = new Set([\"address\"]);\n\nconst QuestionAnswer = ({ question, answer }) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.subHeading}>{question}</div>\n      <br />\n      <div className={classes.answer}>{answer}</div>\n    </div>\n  );\n};\n\nconst steps = [\"Personal Details\", \"Account Details\"];\n\nexport default withSnackbar((props) => {\n  const classes = useStyles();\n  const [data, setData] = useState({});\n  const [step, setStep] = useState(0);\n\n  const getFormComponent = (key, field) => {\n    switch (field.type) {\n      case \"email\":\n      case \"string\":\n        return (\n          <Grid item xs={12} key={key}>\n            <TextField\n              type={field.type}\n              value={data[key] || \"\"}\n              onChange={(e) => setData({ ...data, [key]: e.target.value })}\n              label={_.startCase(field.label || key)}\n              variant=\"outlined\"\n              required={field.required}\n              fullWidth\n              multiline={isMultiline.has(key) || false}\n              rows={isMultiline.has(key) ? 2 : 1}\n              id={key}\n              name={key}\n              autoComplete={key}\n            />\n          </Grid>\n        );\n      case \"date\":\n        return (\n          <Grid item xs={12} key={key}>\n            <KeyboardDatePicker\n              disableToolbar\n              fullWidth\n              value={data[key] || null}\n              onChange={(e) =>\n                setData({ ...data, [key]: moment(e).format(\"YYYY-MM-DD\") })\n              }\n              label={_.startCase(field.label || key)}\n              inputVariant=\"outlined\"\n              format=\"yyyy-MM-dd\"\n              margin=\"normal\"\n              id={key}\n              KeyboardButtonProps={{\n                \"aria-label\": \"change date\",\n              }}\n            />\n          </Grid>\n        );\n\n      case \"choice\":\n        return (\n          <Grid item xs={12} key={key}>\n            <FormControl variant=\"outlined\" required={field.required} fullWidth>\n              <InputLabel>{_.startCase(field.label || key)}</InputLabel>\n              <Select\n                label={_.startCase(field.label || key)}\n                value={data[key] || \"\"}\n                onChange={(e) => setData({ ...data, [key]: e.target.value })}\n              >\n                {field.choices.map((c) => (\n                  <MenuItem value={c.value} key={c.value}>\n                    {c.display_name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        );\n    }\n  };\n\n  return (\n    <div className={classes.mainGrid}>\n      <div style={{ backgroundColor: \"white\", padding: 20 }}>\n        <Stepper activeStep={step}>\n          {steps.map((s) => (\n            <Step key={s}>\n              <StepLabel>{s}</StepLabel>\n            </Step>\n          ))}\n          <Step>\n            <StepLabel>Summary</StepLabel>\n          </Step>\n        </Stepper>\n        <>\n          {step < 2 && (\n            <div style={{ padding: 20 }}>\n              <Grid container direction=\"column\" spacing={2}>\n                {Object.keys(form[step]).map((key) =>\n                  getFormComponent(key, form[step][key])\n                )}\n              </Grid>\n              <br />\n              <br />\n              <div style={{ textAlign: \"center\" }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => setStep(step + 1)}\n                >\n                  Next\n                </Button>\n              </div>\n            </div>\n          )}\n          {step === 2 && (\n            <>\n              <Grid container direction=\"column\" spacing={2}>\n                {[0, 1].map((s) => (\n                  <Grid item key={s}>\n                    <div style={{ padding: 20 }}>\n                      <div style={{ float: \"left\" }}>\n                        <h3>{steps[s]}</h3>\n                      </div>\n                      <div style={{ float: \"right\" }}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => setStep(s)}\n                        >\n                          Edit\n                        </Button>\n                      </div>\n                    </div>\n                    <br />\n                    <Grid container justify=\"space-evenly\">\n                      {Object.keys(form[s]).map((key) => (\n                        <Grid item xs={5} key={key} className={classes.grid}>\n                          <br />\n                          <QuestionAnswer\n                            question={form[s][key].label}\n                            answer={data[key]}\n                          />\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Grid>\n                ))}\n              </Grid>\n              <br />\n              <br />\n              <div style={{ textAlign: \"center\" }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    exportToJson(data);\n                    props.enqueueSnackbar(\"Form Submitted Successfully\", {\n                      variant: \"success\",\n                    });\n                  }}\n                >\n                  Submit\n                </Button>\n              </div>\n            </>\n          )}\n        </>\n      </div>\n    </div>\n  );\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { SnackbarProvider } from \"notistack\";\n\nconst makeMuiTheme = (themeLight) =>\n  createMuiTheme({\n    props: {\n      MuiButtonBase: {\n        disableRipple: true, // No ripples\n      },\n    },\n    palette: {\n      type: themeLight ? \"light\" : \"dark\",\n      primary: {\n        main: \"#ffc200\",\n      },\n      secondary: {\n        main: \"#044368\",\n      },\n    },\n    shape: {\n      // borderRadius: 7,\n    },\n    typography: {\n      fontFamily: [\n        \"Poppins\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Segoe UI\"',\n        \"Roboto\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(\",\"),\n    },\n  });\n\nconst isInWebAppiOS = window.navigator.standalone === true;\n// const isInWebAppChrome = window.matchMedia('(display-mode: standalone)').matches\n\n// Detects if device is on iOS\nconst isIos = () => {\n  const userAgent = window.navigator.userAgent.toLowerCase();\n  if (/iphone|ipad|ipod/.test(userAgent)) {\n    if (isInWebAppiOS) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default ({ children }) => (\n  <SnackbarProvider maxSnack={3}>\n    <MuiThemeProvider theme={makeMuiTheme(true)}>\n      <CssBaseline />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <ThemeProvider\n          theme={{\n            isIos: isIos(),\n          }}\n        >\n          {children}\n        </ThemeProvider>\n      </MuiPickersUtilsProvider>\n    </MuiThemeProvider>\n  </SnackbarProvider>\n);\n","import { SnackbarProvider } from 'notistack'\nimport React from 'react'\n\nexport default ({ children }) => (\n\t<SnackbarProvider maxSnack={2} dense={true}>\n\t\t{children}\n\t</SnackbarProvider>\n)\n","import React from \"react\";\nimport ThemeProvider from \"./theme\";\nimport SnackProvider from \"./snack\";\n\nexport default ({ children }) => (\n  <ThemeProvider>\n    <SnackProvider>{children}</SnackProvider>\n  </ThemeProvider>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Providers from \"./utils/providers\";\n\nReactDOM.render(\n  <Providers>\n    <App />\n  </Providers>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}